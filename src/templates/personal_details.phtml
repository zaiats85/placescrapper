<?php
include('../public/simplehtmldom_1_5/simple_html_dom.php');
define('URL', $_GET['website']);
$result = array();
/**
 * Sitemap search
 */

$sitemap = ['management', 'management-team', 'leadership', 'leadership-team', 'dedicated-development-teams', 'executive-team', 'company'];

/**
 * Pages URLs search (the last word in URL - please try the given variants and combinations and add .php, .html or .xml):
 */
$ulrs = ['management-team', 'leadership-team', 'management', 'leadership', 'team', 'contacts', 'contact-us', 'about', 'our-people', 'who-we-are', 'executive', 'board', 'executive-profiles', 'board-of-directors'];

/** HTML Tag Search:
 *  Attributes (search only among these):
 *  class/id;
 **/

$class_id = ['team', 'team-member', 'title', 'position', 'teammate', 'member', 'staff', 'post', 'Personnel', 'Board', 'Directors', 'leadership', 'profile', 'board_directors_leadership', 'board-directors-leadership', 'people'];
/**
 * Keywords to search in div text (non-case-sensitive):
 */

$keywords = ['CEO', 'CFO', 'CTO', 'COO', 'VP', 'Vice President', 'Director', 'Executive', 'President', 'Board of Directors', 'Board of Executives', 'Co-Founder', 'Founder', 'Owner', 'Head', 'Chief', 'Chief Human Resources Officer', 'Chief Executive Officer', 'Chief Financial Officer', 'Chief Technical Officer', 'Chief Operational Officer', 'Chief Information Officer', 'Chief Sales Officer', 'Managing Director', 'Deputy Director', 'Deputy President', 'Deputy Executive Officer', 'Chairman', 'Vice Chairman', 'Senior Executive Vice President', 'Executive Director', 'General Manager'];


/**
 *
 */
function getAllContent($result, $sitemap)
{
//    $content = file_get_html(URL . 'sitemap.xml');
//    echo 'website: ' . URL . 'sitemap.xml: ' . $content;
    $url = 'http://www.erecruit.com/';
//    $url = 'http://datalinedata.com/';
//    $url = 'http://www.softelegance.com/';
//    $url = 'http://nanigans.com/';
//    $url = 'http://www.pixability.com/';

    $content = file_get_contents($url . 'sitemap.xml');


    /**
     * Implement for xml scrapped string validation
     */
//    libxml_use_internal_errors(true);
//
//    $doc = simplexml_load_string($content);
//    $xml = explode("\n", $content);
//
//    if (!$doc) {
//        $errors = libxml_get_errors();
//
//        foreach ($errors as $error) {
//            var_dump($error);
//        }
//
//        libxml_clear_errors();
//    }

    $xml = simplexml_load_string(trim($content));
    if($xml){
        foreach ($xml->children() as $child) {
            $sitemap_url =  (string) $child->loc;
            $counter = strlen($url);
            $sitemap_url =  substr($sitemap_url, $counter);
            $result[] = $sitemap_url;
        }
    } else {
        echo('Sitemap missing or is not xml');
    }
    $intersection = array_intersect($result, $sitemap);
    if($intersection) {
        foreach ($intersection as &$value) {
            $value = $url.$value;
        }
        unset($value);
    }
    foreach ($intersection as $value) {
        $pas = (string)$value;
        $content = file_get_html($pas);
        $ter = $content->find('a[href]');
        var_dump($ter);
    }





//        set_time_limit(120);


}

getAllContent($result, $sitemap);
//$content->clear();
//unset($content);

//echo memory_get_usage() . '<br>';

?>
